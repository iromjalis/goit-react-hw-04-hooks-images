{"version":3,"sources":["services/config.js","services/images-api.js","components/Container/Container.jsx","components/Searchbar/Searchbar.jsx","components/ImageGallery/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/Modal/Modal.jsx","components/Loader/Loader.jsx","App.js","index.js"],"names":["config","currentPage","searchQuery","method","baseURL","params","API","axios","defaults","image_type","key","fetchImages","a","get","q","then","response","data","hits","Container","children","Searchbar","onSubmit","useState","query","setQuery","className","e","preventDefault","type","onChange","currentTarget","value","autoComplete","placeholder","defaultProps","ImageGalleryItem","id","webformatURL","largeImageURL","tags","handleLargeURLImage","handleClick","target","nodeName","dataset","large","onClick","src","alt","ImageGallery","images","console","log","largeURLImage","map","user","tag","Button","modalRoot","document","querySelector","Modal","onClose","createPortal","width","Loader","color","height","App","setImages","setSearchQuery","setLargeImageURL","isLoading","setIsLoading","error","setError","showModal","setShowModal","setCurrentPage","useEffect","options","imagesApi","prevPage","catch","finally","window","scrollTo","top","documentElement","scrollHeight","behavior","trim","alert","length","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a4ddfdfb.chunk.js","sourcesContent":["const config = {\r\n  currentPage: 1,\r\n  searchQuery: \"\",\r\n  method: \"get\",\r\n  baseURL: \"https://pixabay.com/api/\",\r\n  params: \"&image_type=photo\",\r\n  API: \"21072245-3acfda09a1d5bc65070e6b336\",\r\n};\r\n\r\nexport default config;\r\n","import axios from \"axios\";\r\nimport config from \"./config\";\r\n\r\nconst BASE_URL = \"https://pixabay.com/api/\";\r\nconst API_KEY = \"21072245-3acfda09a1d5bc65070e6b336\";\r\n\r\naxios.defaults.baseURL = BASE_URL;\r\naxios.defaults.params = {\r\n  ...config,\r\n  image_type: \"photo\",\r\n  key: API_KEY,\r\n};\r\n\r\nconst fetchImages = async ({ currentPage, searchQuery }) => {\r\n  return await axios\r\n    .get(\"\", {\r\n      params: {\r\n        currentPage,\r\n        q: searchQuery,\r\n      },\r\n    })\r\n    .then((response) => response.data.hits);\r\n};\r\n\r\nexport default { fetchImages };\r\n","import React from \"react\";\n\nconst Container = ({ children }) => <div>{children}</div>;\n\nexport default Container;\n","import React, { useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Searchbar = ({ onSubmit }) => {\n  const [query, setQuery] = useState(\"\");\n  const handleChange = (e) => {\n    setQuery(e.currentTarget.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    onSubmit(query);\n\n    setQuery(\"\");\n  };\n  return (\n    <header className=\"Searchbar\">\n      <form className=\"SearchForm\" onSubmit={handleSubmit}>\n        <button type=\"submit\" className=\"SearchForm-button\">\n          <span className=\"SearchForm-button-label\">Search</span>\n        </button>\n\n        <input\n          onChange={handleChange}\n          className=\"SearchForm-input\"\n          value={query}\n          type=\"text\"\n          autoComplete=\"off\"\n          placeholder=\"Search images and photos\"\n        />\n      </form>\n    </header>\n  );\n};\n\nSearchbar.propTypes = {\n  // bla: PropTypes.string,\n};\n\nSearchbar.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Searchbar;\n","import React from \"react\";\r\n\r\nconst ImageGalleryItem = ({\r\n  id,\r\n  webformatURL,\r\n  largeImageURL,\r\n  tags,\r\n  handleLargeURLImage,\r\n}) => {\r\n  // const [largeImg, setLargeImg] = useState(\"\");\r\n  const handleClick = (e) => {\r\n    if (e.target.nodeName === \"IMG\") {\r\n      // setLargeImg(e.target.dataset.large);\r\n      handleLargeURLImage(e.target.dataset.large);\r\n    }\r\n  };\r\n  return (\r\n    <li className=\"ImageGalleryItem\" key={webformatURL} onClick={handleClick}>\r\n      <img\r\n        src={webformatURL}\r\n        alt={tags}\r\n        className=\"ImageGalleryItem-image\"\r\n        onClick={handleClick}\r\n        data-large={largeImageURL}\r\n      />\r\n    </li>\r\n  );\r\n};\r\n\r\nImageGalleryItem.propTypes = {\r\n  // bla: PropTypes.string,\r\n};\r\n\r\nImageGalleryItem.defaultProps = {\r\n  // bla: 'test',\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\n//components\nimport ImageGalleryItem from \"./ImageGalleryItem\";\n\nconst ImageGallery = ({ images, handleLargeURLImage }) => {\n  const handleClick = (e) => {\n    console.log(\"gallery click\");\n  };\n  const largeURLImage = (data) => {\n    handleLargeURLImage(data);\n  };\n  return (\n    <ul className=\"ImageGallery\" id=\"imagesList\">\n      {images.map(({ id, webformatURL, largeImageURL, tags, user }) => (\n        <ImageGalleryItem\n          onClick={handleClick}\n          key={`${id}${user}`}\n          webformatURL={webformatURL}\n          largeImageURL={largeImageURL}\n          tag={tags}\n          handleLargeURLImage={largeURLImage}\n        />\n      ))}\n    </ul>\n  );\n};\n\nImageGallery.propTypes = {\n  // bla: PropTypes.string,\n};\n\nImageGallery.defaultProps = {\n  // bla: 'test',\n};\nexport default ImageGallery;\n","import React, { useState } from \"react\";\n\nconst Button = ({ onClick }) => {\n  return (\n    <button className=\"ButtonWrapper\" onClick={onClick}>\n      Load more...\n    </button>\n  );\n};\n\nButton.propTypes = {\n  // bla: PropTypes.string,\n};\n\nButton.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Button;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { createPortal } from \"react-dom\";\n\nconst modalRoot = document.querySelector(\"#modal\");\n\nconst Modal = ({ largeImageURL, onClose, children }) => {\n  const handleBackdropClick = (e) => {\n    if (e.currentTarget === e.target) {\n      onClose();\n    }\n  };\n  return createPortal(\n    <div className=\"Overlay\" onClick={handleBackdropClick}>\n      <div className=\"Modal\">\n        {children}\n        <img src={largeImageURL} alt=\"No available\" width=\"640\" />\n      </div>\n    </div>,\n    modalRoot\n  );\n};\n\nModal.propTypes = {\n  largeImageURL: PropTypes.string.isRequired,\n  onClose: PropTypes.func.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Modal;\n","import React, { useState } from \"react\";\n// import PropTypes from 'prop-types';\nimport ThreeDots from \"react-loader-spinner\";\n\nconst Loader = () => {\n  return (\n    //   return <h1>Something went wrong.</h1>;\n    <div className=\"LoaderWrapper\">\n      <ThreeDots type=\"ThreeDots\" color=\"#00BFFF\" height={80} width={80} />\n    </div>\n  );\n};\n\nLoader.propTypes = {\n  // bla: PropTypes.string,\n};\n\nLoader.defaultProps = {\n  // bla: 'test',\n};\n\nexport default Loader;\n","/* eslint-disable react/no-unused-state */\nimport \"./App.css\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport imagesApi from \"./services/images-api\";\n\nimport Container from \"./components/Container/Container\";\nimport Searchbar from \"./components/Searchbar/Searchbar\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport Button from \"./components/Button/Button\";\nimport Modal from \"./components/Modal/Modal\";\nimport Loader from \"components/Loader/Loader\";\n\n// https://pixabay.com/api/?q=что_искать&page=номер_страницы&key=твой_ключ&image_type=photo&orientation=horizontal&per_page=12\n\n//* const API = '21072245-3acfda09a1d5bc65070e6b336';\n//! https://pixabay.com/api/?key=21072245-3acfda09a1d5bc65070e6b336&q=yellow+flowers&image_type=photo\n\nfunction App() {\n  const [images, setImages] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [largeImageURL, setLargeImageURL] = useState(\"\");\n  const [filter, setFilter] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [showModal, setShowModal] = useState(false);\n  const [currentPage, setCurrentPage] = useState(1);\n\n  const onChangeQuery = (query) => {\n    if (query.trim() === \"\") {\n      alert(\"Please write something\");\n      return;\n    }\n    setSearchQuery(query);\n    setCurrentPage(1);\n    setImages([]);\n  };\n\n  const scrollTo = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  useEffect(() => {\n    setError(error);\n  }, [error]);\n  useEffect(() => {\n    if (searchQuery !== \"\") fetchImages();\n  }, [searchQuery]);\n\n  const fetchImages = () => {\n    setIsLoading(true);\n\n    const options = {\n      searchQuery,\n      currentPage,\n    };\n\n    imagesApi\n      .fetchImages(options)\n      .then((data) => {\n        setImages([...images, ...data]);\n        setCurrentPage((prevPage) => prevPage + 1);\n        setError(\"\");\n      })\n      .catch((error) => console.log(error))\n      .finally(() => {\n        setIsLoading(false);\n        scrollTo();\n      });\n  };\n  const toggleModal = () => setShowModal(!showModal);\n\n  const handleLargeURLImage = (data) => {\n    setLargeImageURL(data);\n    setShowModal(true);\n  };\n\n  return (\n    <div className=\"App\">\n      <Container>\n        {showModal && (\n          <Modal onClose={toggleModal} largeImageURL={largeImageURL} />\n        )}\n        <Searchbar onSubmit={onChangeQuery} searchQuery={searchQuery} />\n        {images.length > 0 && (\n          <ImageGallery\n            images={images}\n            handleLargeURLImage={handleLargeURLImage}\n          />\n        )}\n        {isLoading ? (\n          <Loader error={error} />\n        ) : (\n          images.length > 0 && <Button onClick={fetchImages} />\n        )}\n      </Container>\n    </div>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}